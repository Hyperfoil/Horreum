# Configuration file
# key = value
# postgresql12
# using my docker0 IP
quarkus.datasource.url=jdbc:postgresql://172.17.0.1:5432/horreum
#quarkus.datasource.url=jdbc:postgresql://server1:5442/repo
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.username=appuser
quarkus.datasource.password=secret
# Insecure mode is useful when we're experimenting with the schema.
%insecure.quarkus.datasource.username=dbadmin
%insecure.quarkus.datasource.password=secret
quarkus.datasource.min-size=3
quarkus.datasource.max-size=10
# TODO validation query
# quarkus.datasource.validation-query-sql=SELECT current_setting('repo.userroles', true) = '';

quarkus.index-dependency.yaup.group-id=io.hyperfoil.tools
quarkus.index-dependency.yaup.artifact-id=yaup
# quarkus.index-dependency.yaup.classifier=0.2-SNAPSHOT
#quarkus.index-dependency.<name>.classifier=(this one is optional)


quarkus.hibernate-orm.dialect=io.hyperfoil.tools.repo.entity.converter.JsonPostgreSQLDialect

# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.database.generation=update
# import.sql is executed only in 'create' or 'drop-and-create' modes.
%insecure.quarkus.hibernate-orm.database.generation=drop-and-create
# By default (in production) the database is created using structure.sql - the default application user
# does not have privileges to drop or alter the tables.
quarkus.hibernate-orm.database.generation=none


#quarkus.native.additional-build-args=

hibernate.jdbc.time_zone=UTC

# OIDC Configuration
quarkus.oidc.auth-server-url=http://172.17.0.1:8180/auth/realms/horreum
quarkus.oidc.client-id=horreum
quarkus.oidc.credentials.secret=overridden-in-file-dot-env

# Secret used to sign database rows
repo.db.secret=secret
repo.keycloak.url=http://localhost:8180/auth
