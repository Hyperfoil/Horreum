version: '3.1'
volumes:
  horreum_pg12: {}
services:
  postgres:
    image: docker.io/postgres:12
    environment:
    - POSTGRES_DB=horreum
    - POSTGRES_USER=dbadmin
    - POSTGRES_PASSWORD=secret
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
    - horreum_pg12:/var/lib/postgresql/data
  db-init:
    depends_on:
    - postgres
    image: docker.io/postgres:12
    restart: on-failure
    environment:
    - "PGHOST=${CONTAINER_HOST_IP:-172.17.0.1}"
    - "PGPORT=${POSTGRES_PORT:-5432}"
    - PGDATABASE=horreum
    - PGUSER=dbadmin
    - PGPASSWORD=secret
    command:
    - bash
    - -x
    - -c
    - |
      psql -c "SELECT 1;" || exit 1
      if ! psql -t -c "SELECT 1 FROM pg_roles WHERE rolname = 'keycloak';" | grep -q 1; then
        psql -c "CREATE ROLE keycloak noinherit login password 'secret';"
      fi
      if ! psql -t -c "SELECT 1 FROM pg_database WHERE datname = 'keycloak';" | grep -q 1; then
        psql -c "CREATE DATABASE keycloak WITH OWNER = 'keycloak';"
      fi
      if ! psql -t -c "SELECT 1 FROM pg_roles WHERE rolname = 'appuser';" | grep -q 1; then
          psql -c "CREATE ROLE appuser noinherit login password 'secret';"
      fi
  keycloak:
    depends_on:
    - postgres
    image: quay.io/keycloak/keycloak
    entrypoint: /cwd/keycloak.sh
    environment:
    - KEYCLOAK_USER=admin
    - KEYCLOAK_PASSWORD=secret
    #- KEYCLOAK_LOGLEVEL=DEBUG
    - ROOT_LOGLEVEL=INFO
    - DB_VENDOR=postgres
    - "DB_ADDR=${CONTAINER_HOST_IP:-172.17.0.1}"
    - "DB_PORT=${POSTGRES_PORT:-5432}"
    - DB_DATABASE=keycloak
    - DB_USER=keycloak
    - DB_PASSWORD=secret
    ports:
    - "${KEYCLOAK_HTTP_PORT:-8180}:8180"
    volumes:
    - "${RESOURCES_PATH:-./horreum-backend/src/main/resources}:/etc/keycloak/imports:ro,z"
    - "${WORKING_PATH:-./}:/cwd:ro,z"
  app-init:
    depends_on:
    - keycloak
    image: docker.io/dwdraju/alpine-curl-jq
    restart: on-failure
    command:
    - bash
    - -x
    - /cwd/app-init.sh
    - "${PORT_OFFSET:-0}"
    volumes:
    - "${WORKING_PATH:-./}:/cwd:ro,z"
  grafana:
    depends_on:
    - keycloak
    - app-init
    image: grafana/grafana
    entrypoint: /cwd/grafana.sh
    environment:
    - GF_INSTALL_PLUGINS=simpod-json-datasource
    - GF_LOG_LEVEL=debug
    - "GF_SERVER_ROOT_URL=${GRAFANA_GF_SERVER_ROOT_URL:-http://localhost:4040/}"
    - GF_USERS_DEFAULT_THEME=light
    - GF_SECURITY_ALLOW_EMBEDDING=true
    - GF_AUTH_DISABLE_LOGIN_FORM=true
    - GF_AUTH_OAUTH_AUTO_LOGIN=true
    - GF_AUTH_GENERIC_OAUTH_ENABLED=true
    - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
    - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email
    - "GF_AUTH_GENERIC_OAUTH_AUTH_URL=${GF_AUTH_GENERIC_OAUTH_AUTH_URL:-http://localhost:8180/auth/realms/horreum/protocol/openid-connect/auth}"
    - "GF_AUTH_GENERIC_OAUTH_TOKEN_URL=${GF_AUTH_GENERIC_OAUTH_TOKEN_URL:-http://172.17.0.1:8180/auth/realms/horreum/protocol/openid-connect/token}"
    - "GF_AUTH_GENERIC_OAUTH_API_URL=${GF_AUTH_GENERIC_OAUTH_API_URL:-http://172.17.0.1:8180/auth/realms/horreum/protocol/openid-connect/userinfo}"
    - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=false
    ports:
    - "${GRAFANA_HTTP_PORT:-4040}:3000"
    volumes:
    - "${WORKING_PATH:-./}:/cwd:ro,z"
