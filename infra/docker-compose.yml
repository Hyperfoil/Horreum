version: '3.8'
volumes:
  horreum_pg13: {}
services:
  postgres:
    image: docker.io/postgres:13
    env_file: postgres.env
    environment:
      PGPORT: ${POSTGRES_PORT:-5432}
    volumes:
    - horreum_pg13:/var/lib/postgresql/data
    ports:
    - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  dbinit:
    image: docker.io/postgres:13
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    env_file: postgres.env
    environment:
    - PGHOST=horreum_postgres_1
    - PGPORT=${POSTGRES_PORT:-5432}
    volumes:
    - "${WORKING_PATH:-../}:/cwd:ro,z"
    command:
    - bash
    - -x
    - /cwd/infra/create-db.sh
  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KC_HTTP_HOST: 0.0.0.0
      KC_HTTP_PORT: "${KEYCLOAK_HTTP_PORT:-8180}"
      DB_ADDR: horreum_postgres_1
      DB_PORT: "${POSTGRES_PORT:-5432}"
    stop_signal: "${STOP_SIGNAL:-SIGTERM}"
    volumes:
    - "${WORKING_PATH:-../}:/cwd:ro,z"
    ports:
    - "8180:8180"
  app-init:
    depends_on:
    - keycloak
    image: docker.io/dwdraju/alpine-curl-jq
    restart: on-failure
    command:
    - bash
    - -x
    - /cwd/infra/app-init.sh
    - "${PORT_OFFSET:-0}"
    environment:
    - POSTGRES_HOST=[::1]
    - KEYCLOAK_INTERNAL_HOST=horreum_keycloak_1
    - KEYCLOAK_UI_HOST=[::1]
    volumes:
    - "${WORKING_PATH:-../}:/cwd:rw,z"
